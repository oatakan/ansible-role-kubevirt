---

- name: remove vm(s)
  kubernetes.core.k8s:
    state: absent
    api_version: "{{ api_version_virtual_machine }}"
    kind: VirtualMachine
    name: "{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}"
    namespace: '{{ target_namespace }}'
    validate_certs: no
    api_key: "{{ api_key }}"
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: vm
  when:
    - nodes is defined
    - hostvars[vm].labels['vm.kubevirt.io/name'] is defined
    - (nodes | json_query(query)) | length > 0
  vars:
    query: "@[?name==`{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}`]"

- name: wait for vm(s) deletion to complete
  k8s_info:
    api_version: "{{ api_version_virtual_machine }}"
    kind: VirtualMachine
    name: "{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}"
    namespace: '{{ target_namespace }}'
    validate_certs: no
    api_key: "{{ api_key }}"
  register: vm_info
  until: (vm_info.resources | default([])) | length == 0
  retries: "{{ instance_wait_retry_limit }}"
  delay: 3
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: vm
  when:
    - kubevirt_deprov_wait_vm | bool
    - nodes is defined
    - hostvars[vm].labels['vm.kubevirt.io/name'] is defined
    - (nodes | json_query(query)) | length > 0
  vars:
    query: "@[?name==`{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}`]"

- include_tasks: remove_pvc.yml
  loop: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: vm
  when:
    - kubevirt_deprov_wait_vm | bool
    - nodes is defined
    - hostvars[vm].labels['vm.kubevirt.io/name'] is defined
    - (nodes | json_query(query)) | length > 0
  vars:
    query: "@[?name==`{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}`]"
    target_pvc_name: "{{ hostvars[vm].labels['vm.kubevirt.io/name'] }}-disk0"